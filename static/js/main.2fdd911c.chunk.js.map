{"version":3,"sources":["Calculator.js","Button.js","UpperDisplay.js","BottomDisplay.js","App.js","serviceWorker.js","index.js"],"names":["Calculator","props","state","upperDisplay","bottomDisplay","expression","decAllowed","solved","clearAll","bind","handleOperator","handleNumber","solver","handleDecimal","maxDigitWarning","this","setState","setTimeout","event","includes","val","target","textContent","main","replace","end","charAt","length","second","console","log","toString","split","some","k","t","test","eval","className","clear","operatorInput","numberInput","solve","decimal","React","Component","Button","onClick","id","value","UpperDisplay","BottomDisplay","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2fdd911c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport UpperDisplay from \"./UpperDisplay\";\r\nimport BottomDisplay from \"./BottomDisplay\";\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      upperDisplay: \"\",\r\n      bottomDisplay: \"0\",\r\n      expression: [],\r\n      decAllowed: true,\r\n      solved: false,\r\n    };\r\n    this.clearAll = this.clearAll.bind(this);\r\n    this.handleOperator = this.handleOperator.bind(this);\r\n    this.handleNumber = this.handleNumber.bind(this);\r\n    this.solver = this.solver.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.maxDigitWarning = this.maxDigitWarning.bind(this);\r\n  }\r\n  clearAll() {\r\n    this.setState({\r\n      upperDisplay: \"\",\r\n      bottomDisplay: \"0\",\r\n      decAllowed: true,\r\n      solved: false,\r\n    });\r\n  }\r\n  maxDigitWarning() {\r\n    this.setState({\r\n      bottomDisplay: \"Digit Limit Met\",\r\n      upperDisplay: this.state.bottomDisplay,\r\n    });\r\n    setTimeout(\r\n      () => this.setState({ bottomDisplay: this.state.upperDisplay }),\r\n      1000\r\n    );\r\n  }\r\n\r\n  handleOperator(event) {\r\n    if (!this.state.bottomDisplay.includes(\"Limit\")) {\r\n      const val = event.target.textContent;\r\n      let main = this.state.upperDisplay.replace(\"x\", \"*\").replace(\"รท\", \"/\");\r\n      let end = main.charAt(main.length - 1);\r\n      let second = main.charAt(main.length - 2);\r\n      if (val === end) {\r\n        console.log(\"trying...\");\r\n      } else if ([\"+\", \"-\", \"*\", \"/\"].includes(end)) {\r\n        // 8+- +,*,/\r\n        if (val === \"-\") {\r\n          if (![\"+\", \"-\", \"*\", \"/\"].includes(second)) {\r\n            this.setState({ upperDisplay: main + val });\r\n          }\r\n        } else if (end !== \"-\") {\r\n          this.setState({ upperDisplay: main.replace(end, val) });\r\n        } else {\r\n          this.setState({\r\n            upperDisplay: main.replace(/\\+|\\-|\\*|\\//g, \"\") + val,\r\n          });\r\n        }\r\n      } else if (this.state.solved) {\r\n        this.setState({\r\n          upperDisplay: this.state.bottomDisplay + val,\r\n          bottomDisplay: val,\r\n          decAllowed: true,\r\n          solved: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          upperDisplay: main + val,\r\n          bottomDisplay: val,\r\n          decAllowed: true,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  handleNumber(event) {\r\n    if (!this.state.bottomDisplay.includes(\"Limit\")) {\r\n      if (this.state.upperDisplay === \"0\") {\r\n        this.setState({\r\n          upperDisplay: this.state.upperDisplay.replace(\r\n            \"0\",\r\n            event.target.textContent\r\n          ),\r\n        });\r\n      } else if (this.state.bottomDisplay.length > 21) {\r\n        this.maxDigitWarning();\r\n      } else if (this.state.solved) {\r\n        this.setState({\r\n          upperDisplay: event.target.textContent,\r\n          bottomDisplay: event.target.textContent,\r\n          solved: false,\r\n        });\r\n      } else {\r\n        this.state.bottomDisplay === \"0\" ||\r\n        this.state.bottomDisplay\r\n          .toString()\r\n          .split(\"\")\r\n          .some((k) => [\"+\", \"-\", \"*\", \"/\"].includes(k))\r\n          ? this.setState({\r\n              upperDisplay: this.state.upperDisplay + event.target.textContent,\r\n              bottomDisplay: event.target.textContent,\r\n              solved: false,\r\n            })\r\n          : this.setState({\r\n              upperDisplay: this.state.upperDisplay + event.target.textContent,\r\n              bottomDisplay:\r\n                this.state.bottomDisplay + event.target.textContent,\r\n              solved: false,\r\n            });\r\n      }\r\n    }\r\n  }\r\n  solver() {\r\n    if (!this.state.bottomDisplay.includes(\"Limit\")) {\r\n      var t = this.state.upperDisplay.replace(\"x\", \"*\").replace(\"รท\", \"/\");\r\n      if (!this.state.solved) {\r\n        if (\r\n          /[+*-/]$/.test(this.state.upperDisplay) ||\r\n          /^[+*\\-/]/.test(this.state.upperDisplay)\r\n        ) {\r\n          this.setState({\r\n            upperDisplay: t.replace(/\\+|\\-|\\*|\\//g, \"\"),\r\n            solved: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            upperDisplay:\r\n              t.replace(\"*\", \"x\").replace(\"/\", \"รท\") + \"\\n= \" + eval(t),\r\n            // eslint-disable-next-line\r\n            bottomDisplay: eval(t).toString(),\r\n            decAllowed: true,\r\n            solved: true,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  handleDecimal(event) {\r\n    if (!this.state.bottomDisplay.includes(\"Limit\")) {\r\n      if (this.state.solved) {\r\n        this.setState({\r\n          upperDisplay: \"0.\",\r\n          bottomDisplay: \"0.\",\r\n          solved: false,\r\n        });\r\n      } else {\r\n        if (this.state.decAllowed) {\r\n          this.setState({\r\n            upperDisplay: this.state.upperDisplay + event.target.textContent,\r\n            bottomDisplay: this.state.bottomDisplay + event.target.textContent,\r\n            decAllowed: false,\r\n            solved: false,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <UpperDisplay upperDisplay={this.state.upperDisplay} />\r\n        <BottomDisplay bottomDisplay={this.state.bottomDisplay} />\r\n        <Button\r\n          clear={this.clearAll}\r\n          operatorInput={(event) => this.handleOperator(event)}\r\n          numberInput={(event) => this.handleNumber(event)}\r\n          solve={this.solver}\r\n          decimal={(event) => this.handleDecimal(event)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Calculator;\r\n","import React from \"react\";\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"pad\">\r\n        <button\r\n          onClick={this.props.clear}\r\n          id=\"clear\"\r\n          className=\"spanned-column\"\r\n        >\r\n          AC\r\n        </button>\r\n        <button onClick={this.props.operatorInput} id=\"divide\" className=\"operator\" value=\"/\">\r\n        รท\r\n        </button>\r\n        <button onClick={this.props.operatorInput} id=\"multiply\" className=\"operator\" value=\"*\">\r\n          x\r\n        </button>\r\n        <button onClick={this.props.numberInput} id=\"seven\">\r\n          7\r\n        </button>\r\n        <button onClick={this.props.numberInput} id=\"eight\">\r\n          8\r\n        </button>\r\n        <button onClick={this.props.numberInput} id=\"nine\">\r\n          9\r\n        </button>\r\n        <button onClick={this.props.operatorInput} id=\"add\" className=\"operator\" value=\"+\">\r\n          +\r\n        </button>\r\n        <button onClick={this.props.numberInput} id=\"four\">\r\n          4\r\n        </button>\r\n        <button onClick={this.props.numberInput} id=\"five\">\r\n          5\r\n        </button>\r\n        <button onClick={this.props.numberInput} id=\"six\">\r\n          6\r\n        </button>\r\n        <button onClick={this.props.operatorInput} id=\"subtract\" className=\"operator\" value=\"-\">\r\n          -\r\n        </button>\r\n        <button onClick={this.props.numberInput} id=\"one\">\r\n          1\r\n        </button>\r\n        <button onClick={this.props.numberInput} id=\"two\">\r\n          2\r\n        </button>\r\n        <button onClick={this.props.numberInput} id=\"three\">\r\n          3\r\n        </button>\r\n        <button id=\"equals\" className=\"spanned-row\" onClick={this.props.solve}>\r\n          =\r\n        </button>\r\n\r\n        <button\r\n          onClick={this.props.numberInput}\r\n          id=\"zero\"\r\n          className=\"spanned-column\"\r\n        >\r\n          0\r\n        </button>\r\n        <button id=\"decimal\" onClick={this.props.decimal}>\r\n          .\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst UpperDisplay = (props) => {\r\n  return <div  className=\"upperDisplay\">{props.upperDisplay}</div>;\r\n};\r\n\r\nexport default UpperDisplay;\r\n","import React from \"react\";\r\n\r\nconst BottomDisplay = (props) => {\r\n  return <div id=\"display\" className=\"bottomDisplay\">{props.bottomDisplay}</div>;\r\n};\r\n\r\nexport default BottomDisplay;\r\n","import React from 'react';\nimport './App.css';\nimport Calculator from \"./Calculator\"\n\nclass App extends React.Component {\n  render(){\n    return <Calculator />\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}